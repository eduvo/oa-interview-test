---
openapi: 3.0.1
info:
  title: API
  version: v1
components:
  schemas:
    error:
      type: object
      properties:
        message:
          type: string
          example: "error message"
paths:
  "/api/v1/teachers/{id}/followed_students/{student_id}":
    post:
      summary: A teacher follows a student.
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          description: The id of the teacher
          required: true
          schema:
            type: string
        - name: student_id
          in: path
          description: The id of the student to follow
          required: true
          schema:
            type: string
      responses:
        201:
          description: "Follow ship created"
        404:
          description: "Student not found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        409:
          description: "Followship already exists"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    delete:
      summary: A teacher unfollows a student.
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          description: The id of the teacher.
          required: true
          schema:
            type: string
        - name: student_id
          in: path
          description: The id of the student to follow.
          required: true
          schema:
            type: string
      responses:
        202:
          description: "Deletion Accepted"
        404:
          description: "Student not found"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/api/v1/teachers/{id}/followed_students":
    get:
      summary: Get a list of students followed by the specified teacher
      tags:
        - Teachers
      parameters:
        - name: id
          in: path
          description: The id of the teacher.
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Success"
          content:
            "application/json":
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 123
                        first_name:
                          type: string
                          example: Harry
                        last_name:
                          type: string
                          example: Yuan
                        gender:
                          type: string
                          enum: [male, female]
                      required: [first_name, last_name, gender]
servers:
  - url: http://{defaultHost}
    variables:
      defaultHost:
        default: localhost:3000
